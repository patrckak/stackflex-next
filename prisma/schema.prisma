// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlite"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  public_id     String         @id @unique // CPF
  id            String         @unique @default(cuid())
  firstname     String
  lastname      String
  email         String
  verification  String?
  isVerificated Boolean        @default(false) // se o email é verificado ou não
  password      String
  LastModify    DateTime       @updatedAt
  cep           String
  cidade        String
  endereco      String
  avatar        String         @default("https://utfs.io/f/SHkctA3zZK7UNJJh7RPsirWFqgMZSXO8ta0lynz9TEYoj2Hv")
  cnpj          String?
  razao         String?
  Account       Account[]
  Funcionarios  Funcionarios[]
  Client        Client[]
  Estimates     Estimates[]
}

model Account {
  id          String  @id
  theme       String  @default("sys") // sys = system pref | drk = dark theme | lgt = light theme
  usePDV      Boolean @default(false) // Ponto de Venda
  useStock    Boolean @default(false) // Gestão de estoque
  useFinance  Boolean @default(false) // Gestão Financeira
  useWhatsapp Boolean @default(false) // Integração com Whatsapp
  useChild    Boolean @default(false) // Criação de contas "filhas"

  relation User @relation(fields: [id], references: [id])
}

model Funcionarios {
  id    String  @id
  email String? @unique
  cpf   String? @unique

  relation2 User @relation(fields: [id], references: [id])
}

model Estimates {
  // Orçamentos
  id       String @id
  clientId String

  r4 User @relation(fields: [id], references: [id])
}

model Client {
  id      String  @id
  userId  String
  address String?
  contact String?

  r3 User @relation(fields: [userId], references: [id])

  @@index([userId])
}
